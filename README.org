#+TITLE: Build for Debian
#+Author: Isaac Lopez

* Debian Image *For me only*
I need to install Linux's new Kernel because of my system
** Install necessary firmware
Links:
[[https://cdimage.debian.org/debian-cd/current/amd64/iso-cd/debian-10.9.0-amd64-netinst.iso][Debian Image]]
[[https://packages.debian.org/buster/all/firmware-brcm80211/download][Wifi-Firmaware]]
[[https://packages.debian.org/buster/all/firmware-brcm80211/download][AMD Graphics]]

** Download Debian Buster
After graphical install move to Unstable-Testing in order to get
kernel 5.9.0-1-amd64.
Add the sources list:
#+begin_src sh
cd /etc/apt/
rm sources.list
touch sources.list
echo "
deb http://ftp.us.debian.org/debian/ testing main contrib non-free
deb-src http://ftp.us.debian.org/debian/ testing main contrib non-free
deb http://ftp.us.debian.org/debian/ testing-updates main contrib non-free
deb-src http://ftp.us.debian.org/debian/ testing-updates main contrib non-free
# deb http://deb.debian.org/debian-security testing/updates main contrib non-free
# deb-src http://deb.debian.org/debian-security testing/updates main contrib non-free

# This system was installed using small removable media
# (e.g. netinst, live or single CD). The matching deb cdrom
# entries were disabled at the end of the installation process.
# For information about how to configure apt package sources,
# see the sources.list(5) manual.
deb http://deb.debian.org/debian/ experimental main
" >> sources.list
apt update && apt full-upgrade
#+end_src

** Install Necessary software
#+begin_src sh
apt-get install sudo
visudo # Add isaac to users
#+end_src

#+begin_src sh
sudo reboot
uname -r # Expect linux-5.10-amd64
# Now let us start
sudo apt-get update && sudo apt-get upgrade
sudo apt-get install xorg git build-essential libpam0g-dev libxcb-xkb-dev kitty openssh-server curl wget zsh cmake network-manager feh
sudo apt-get install libcairo2-dev libpango1.0-dev libglib2.0-dev libimlib2-dev libgtk2.0-dev libxinerama-dev libx11-dev libxdamage-dev libxcomposite-dev libxrender-dev libxrandr-dev librsvg2-dev libstartup-notification0-dev
sudo apt-get update && sudo apt-get upgrade
#+end_src
* Get my repo
#+begin_src sh
git clone https://github.com/isaac025/dotfiles
#+end_src


* ZSH
#+begin_src sh
sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
cp old.zshrc $HOME/.zshrc
cp dotfiles/isaac.zsh-theme .oh-my-zsh/themes/
#+end_src


* Fonts
#+begin_src sh
mkdir .local/share/
cp -r dotfiles/fonts .local/share/
#+end_src


* Kitty
#+begin_src sh
cp -r dotfiles/config ./.config
#+end_src


* Ly
#+begin_src sh
git clone https://github.com/nullgemm/ly.git
make github
make
sudo make run
sudo make install
sudo systemctl enable ly.service
#+end_src


* Haskell with Cabal
#+begin_src sh
sudo apt-get install haskell-platform
#+end_src


* XMonad, Rofi, Tint2 and Dunst
#+begin_src sh
sudo apt-get install xmonad libghc-xmonad-contrib-dev rofi dunst
#+end_src
** Basic XMonad config
#+begin_src sh
echo "import XMonad
import XMonad.Config.Desktop
main = xmonad defaultConfig
      { modMask = mod4Mask
      , terminal = \"kitty\"
      }" >> .xmonad/xmonad.hs 
#+end_src 

** Dependencies
#+begin_src sh
sudo apt-get install brightnessctl playerctl doas jq maim mpv xclip # probably need --fix-missing flag
#+end_src

** Tint2 Fork
#+begin_src sh
git clone https://github.com/Axarva/tint2-1.git tint2
cd tint2
mkdir build
cd build
cmake ..
make -j4
#+end_src

** Candy icons
#+begin_src sh
git clone https://github.com/EliverLara/candy-icons
mkdir .themes
mv candy-icons .themes
#+end_src

** Picom
#+begin_src sh
sudo apt-get install libxext-dev libxcb1-dev libxcb-damage0-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-render-util0-dev libxcb-render0-dev libxcb-randr0-dev libxcb-composite0-dev libxcb-image0-dev libxcb-present-dev libxcb-xinerama0-dev libxcb-glx0-dev libpixman-1-dev libdbus-1-dev libconfig-dev libgl1-mesa-dev libpcre2-dev libpcre3-dev libevdev-dev uthash-dev libev-dev libx11-xcb-dev libdbus-1-dev libconfg-dev uthash-dev libxcb-glx0-dev libxcb-present-dev libxcb-xinerama0-dev libxcb-render-util0-dev libxcb-image0-dev libxcb-damage0-dev libxcb-randr0-dev libxcb--dev xcb libxcb-sync-dev libxcb-composite0-dev libxcb-composite0-dev
sudo apt-get install ninja-build meson
git clone https://github.com/ibhagwan/picom
cd picom
git submodule update --init --recursive
meson --buildtype=release . build
sudo ninja -C build
#+end_src


* Firefox
** Instalation probably with macosx
scp isaaclopez@MacOSX:~/Firefox.zip


* Spotify 
** Deb repos
#+begin_src sh
curl -sS https://download.spotify.com/debian/pubkey_0D811D58.gpg | sudo apt-key add - 
echo "deb http://repository.spotify.com stable non-free" | sudo tee /etc/apt/sources.lis.d/spotify.list
#+end_src

** Install
#+begin_src sh
sudo apt-get update && sudo apt-get install spotify-client # Maybe --fix-missing
#+end_src


* Binaries
#+begin_src sh
cp -r dotfiles/bin ~
#+end_src


* Eww
** First install rustup
#+begin_src sh
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
#+end_src

** Then install dependencies, nightly and eww
#+begin_src sh
rustup install nightly
sudo apt-get install libgtk-3-dev
git clone https://github.com/elkowar/eww
cd eww
cargo build --release
cd target/release
chmod +x ./eww
./eww daemon
cp eww ~/bin
#+end_src



* Get icons
#+begin_src sh
mkdir ~/.themes
cp -r dotfiles/candy-icons ~/.themes
#+end_src
** Add change .desktop icons
In order to get the candy icons we have to change
the .desktop files of our apps
Here  is an example for emacs:
#+begin_src sh
sudo vi /usr/share/applications/emacs.desktop
#+end_src
**Go to Icon Line**
E.g. /Icon=emacs/ change to /Icon=/home/name\./themes/candy-icons/apps/scalable/emacs.svg/
**MIND THE ESCAPE SEQUENCE ON THE DOT**


* Emacs 
#+begin_src sh
apt-get install emacs 
cp -r dotfiles/.emacs.d ~
#+end_src

